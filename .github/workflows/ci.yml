name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python v${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip coveralls
          python -m pip install .[test]
          pip list
      - name: Test with pytest
        run: pytest -svv --cov=mkdocs_include_markdown_plugin --cov-config setup.cfg
      - name: Coveralls
        run: coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github

  build-sdist:
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python v3.8
        with:
          python-version: 3.8
      - name: Build sdist
        run: python setup.py sdist
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  build-wheel:
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    name: Build wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python v3.8
        with:
          python-version: 3.8
      - name: Install wheel
        run: python -m pip install --upgrade wheel
      - name: Build wheel
        run: python setup.py bdist_wheel
      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl

  pypi-upload:
    name: Upload to PyPI
    needs:
      - build-sdist
      - build-wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          # repository_url: https://test.pypi.org/legacy/
          skip_existing: true

  release:
    name: Release
    needs:
      - build-sdist
      - build-wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get tag metadata
        id: tag
        run: |
          TAG_TITLE=${GITHUB_REF#refs/*/}
          echo ::set-output name=title::$TAG_TITLE
          git -c protocol.version=2 fetch --prune --progress \
            --no-recurse-submodules origin \
            +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/*
          TAG_BODY="$(git tag -l --format='%(contents)' $TAG_TITLE)"
          TAG_BODY="${TAG_BODY//'%'/'%25'}"
          TAG_BODY="${TAG_BODY//$'\n'/'%0A'}"
          TAG_BODY="${TAG_BODY//$'\r'/'%0D'}"
          echo ::set-output name=body::$TAG_BODY
      - name: Create Release
        uses: actions/create-release@v1.1.4
        id: create-release
        with:
          tag_name: ${{ steps.tag.outputs.title }}
          release_name: ${{ steps.tag.outputs.title }}
          body: ${{ steps.tag.outputs.body }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v2
        name: Download builds
        with:
          name: artifact
          path: dist
      - uses: shogo82148/actions-upload-release-asset@v1.2.5
        name: Upload release assets
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: dist/*
