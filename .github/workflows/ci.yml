name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: pip install -U hatch
      - name: Lint
        run: hatch run style:lint

  test:
    name: Test
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-latest
            python-version: 3.8
            py: py38
          - platform: ubuntu-latest
            python-version: 3.9
            py: py39
          - platform: ubuntu-latest
            python-version: "3.10"
            py: py310
          - platform: ubuntu-latest
            python-version: "3.11"
            py: py311
          - platform: ubuntu-latest
            python-version: "3.12"
            py: py312
          - platform: macos-latest
            python-version: 3.8
            py: py38
          - platform: macos-latest
            python-version: "3.11"
            py: py311
          - platform: macos-latest
            python-version: "3.12"
            py: py312
          - platform: windows-latest
            python-version: 3.8
            py: py38
          - platform: windows-latest
            python-version: "3.11"
            py: py311
          - platform: windows-latest
            python-version: "3.12"
            py: py312
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Set up Python v${{ matrix.python-version }}
        uses: actions/setup-python@v5.0.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install -U hatch
      - name: Run tests
        run: |
          hatch run +py=${{ matrix.py }} tests:all
      - name: Convert coverage to XML
        run: |
          pip install coverage covdefaults
          coverage combine
          coverage xml
      - name: Upload coverage
        uses: codecov/codecov-action@v3.1.4

  build-dist:
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - lint
      - test
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: actions/setup-python@v5.0.0
        name: Install Python
        with:
          python-version: "3.10"
      - name: Install build dependencies
        run: pip install -U hatch
      - name: Build package
        run: hatch build
      - uses: actions/upload-artifact@v4.0.0
        with:
          path: dist/*
          name: distribution

  pypi-upload:
    name: Upload to PyPI
    needs: build-dist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4.1.0
        with:
          name: distribution
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          # repository_url: https://test.pypi.org/legacy/
          skip_existing: true

  release:
    name: Release
    needs: build-dist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Get tag metadata
        id: tag
        run: |
          TAG_TITLE=${GITHUB_REF#refs/*/}
          echo "title=$TAG_TITLE" >> $GITHUB_OUTPUT
          git -c protocol.version=2 fetch --prune --progress \
            --no-recurse-submodules origin \
            +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/*
          TAG_BODY="$(git tag -l --format='%(contents)' $TAG_TITLE)"
          TAG_BODY="${TAG_BODY//'%'/'%25'}"
          TAG_BODY="${TAG_BODY//$'\n'/'%0A'}"
          TAG_BODY="${TAG_BODY//$'\r'/'%0D'}"
          echo "body=$TAG_BODY" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: softprops/action-gh-release@v0.1.15
        id: create-release
        with:
          name: ${{ steps.tag.outputs.title }}
          tag_name: ${{ steps.tag.outputs.title }}
          body: ${{ steps.tag.outputs.body }}
          draft: false
          prerelease: false
      - uses: actions/download-artifact@v4.1.0
        name: Download builds
        with:
          name: distribution
          path: dist
      - uses: shogo82148/actions-upload-release-asset@v1.7.2
        name: Upload release assets
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: dist/*
