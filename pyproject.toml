[project]
name = "mkdocs-include-markdown-plugin"
version = "6.0.1"
description = "Mkdocs Markdown includer plugin."
readme = "README.md"
license = "Apache-2.0"
requires-python = ">=3.8,<3.13"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: Apache Software License",
  "Intended Audience :: Developers",
  "Topic :: Documentation",
  "Topic :: Software Development :: Documentation",
  "Topic :: Text Processing",
  "Topic :: Text Processing :: Markup :: Markdown",
  "Environment :: Console",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12"
]
keywords = ["markdown", "mkdocs", "includer", "plugin"]
dependencies = ["wcmatch>=8,<9"]

[[project.authors]]
name = "Joe Rickerby"

[[project.authors]]
name = "Álvaro Mondéjar Rubio"
email = "mondejar1994@gmail.com"

[[project.maintainers]]
name = "Álvaro Mondéjar Rubio"
email = "mondejar1994@gmail.com"

[project.urls]
Source = "https://github.com/mondeja/mkdocs-include-markdown-plugin"
Documentation = "https://github.com/mondeja/mkdocs-include-markdown-plugin#documentation"
"Bug tracker" = "https://github.com/mondeja/mkdocs-include-markdown-plugin/issues"
Changelog = "https://github.com/mondeja/mkdocs-include-markdown-plugin/releases"

[project.entry-points."mkdocs.plugins"]
include-markdown = "mkdocs_include_markdown_plugin.plugin:IncludeMarkdownPlugin"

[project.optional-dependencies]
cache = ["platformdirs"]

[tool.hatch.build]
include = ["/src"]

[tool.hatch.build.targets.wheel]
packages = ["src/mkdocs_include_markdown_plugin"]

[tool.hatch.envs.default]
python = "3.10"
dependencies = ["mondeja-bump"]

[tool.hatch.envs.style]
python = "3.10"
detached = true
dependencies = ["pre-commit"]

[tool.hatch.envs.style.scripts]
lint = "pre-commit run -a"

[tool.hatch.envs.tests]
matrix-name-format = "{variable}-{value}"
dependencies = ["pytest~=7.0", "coverage~=6.4", "covdefaults"]

[[tool.hatch.envs.tests.matrix]]
python = ["py38", "py39", "py310", "py311", "py312"]
mkdocs = ["1.4.0", "1.4.3", "1.5.0", "1.5.1"]
cache = ["yes", "no"]

[tool.hatch.envs.tests.overrides]
matrix.mkdocs.dependencies = [
  { value = "mkdocs==1.4.0", if = ["1.4.0"] },
  { value = "mkdocs==1.4.3", if = ["1.4.3"] },
  { value = "mkdocs==1.5.0", if = ["1.5.0"] },
  { value = "mkdocs==1.5.1", if = ["1.5.1"] },
]
matrix.cache.dependencies = [
  { value = "platformdirs", if = ["yes"] },
]

[tool.hatch.envs.tests.scripts]
all = "coverage run -m pytest"
unit = "coverage run -m pytest tests/test_unit"
integration = "pytest tests/test_integration --override-ini addopts=-svv"
cov = [
  "hatch run +py=py310 tests:all",
  "coverage html",
  "python -c 'import webbrowser as w;w.open(\"http://127.0.0.1:8088\")'",
  "python -m http.server 8088 -b localhost -d htmlcov",
]

[tool.bump]
targets = [{ file = "pyproject.toml" }]

[tool.project-config]
cache = "2 days"
style = [
  "gh://mondeja/project-config-styles@v4.3/base/pre-commit/md2po2md.json5",
  "gh://mondeja/project-config-styles@v4.3/python/base.json5",
  "gh://mondeja/project-config-styles@v4.3/python/single-quotes.json5",
  "gh://mondeja/project-config-styles@v4.3/python/tests.json5",
  "gh://mondeja/project-config-styles@v4.3/python/google-docstrings.json5",
  "gh://mondeja/project-config-styles@v4.3/python/mypy.json5",
]

[tool.coverage.run]
source = ["src"]
plugins = ["covdefaults"]
parallel = true
data_file = ".coverage/.coverage"

[tool.coverage.report]
exclude_lines = [
  "def __repr__\\(",
  "@(abc\\.)?abstractmethod",
]
fail_under = 1

[tool.flakeheaven]
inline-quotes = "single"
max-line-length = 80
pytest-fixture-no-parentheses = true
pytest-parametrize-values-type = "tuple"
docstring-convention = "google"
unused-arguments-ignore-abstract-functions = true

[tool.flakeheaven.plugins]
pycodestyle = ["+*", "-W503"]
pyflakes = ["+*"]
pylint = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*"]
flake8-docstrings = ["+*", "-D107", "-D105"]
flake8-executable = ["+*"]
flake8-implicit-str-concat = ["+*"]
flake8-print = ["+*"]
flake8-printf-formatting = ["+*"]
flake8-pytest-style = ["+*"]
flake8-bugbear = ["+*"]
flake8-encodings = ["+*"]
flake8-no-pep420 = ["+*"]
flake8-absolute-import = ["+*"]
flake8-unused-arguments = ["+*"]
flake8-slots = ["+*"]
dlint = ["+*"]

[tool.flakeheaven.exceptions."tests/**"]
flake8-docstrings = [
  "-D100",
  "-D101",
  "-D102",
  "-D103",
  "-D104",
  "-D107",
  "-D205",
  "-D415"
]
flake8-no-pep420 = ["-INP001"]

[tool.flakeheaven.exceptions."setup.py"]
flake8-docstrings = ["-D205"]
flake8-no-pep420 = ["-INP001"]

[tool.flakeheaven.exceptions."src/mkdocs_include_markdown_plugin/plugin.py"]
flake8-docstrings = ["-D100", "-D101", "-D102"]
flake8-unused-arguments = ["-U100"]

[tool.isort]
lines_after_imports = 2
multi_line_output = 3
line_length = 79
use_parentheses = true
combine_as_imports = true
include_trailing_comma = true
remove_redundant_aliases = true
known_tests = "tests"
sections = [
  "FUTURE",
  "STDLIB",
  "THIRDPARTY",
  "FIRSTPARTY",
  "TESTS",
  "LOCALFOLDER"
]
py_version = 38
extra_standard_library = [
  "contextvars",
  "dataclasses",
  "importlib.resources",
  "importlib.metadata",
  "zoneinfo",
  "graphlib",
  "tomllib",
  "wsgiref.types"
]

[tool.mypy]
strict = true
python_version = "3.11"
allow_untyped_calls = true
allow_any_generics = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
# The next object is enough to build the wheel with mypyc, but just
# provides a ~10% performance improvement on Python < 3.11 (on Python3.11
# is even slower):
#[tool.hatch.build.targets.wheel.hooks.mypyc]
#dependencies = ["hatch-mypyc", "mkdocs", "typing_extensions"]
#exclude = ["plugin.py"]
