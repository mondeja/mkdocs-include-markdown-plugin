[project]
name = "mkdocs-include-markdown-plugin"
version = "4.0.0"
description = "Mkdocs Markdown includer plugin."
readme = "README.md"
license = "Apache-2.0"
authors = [
  { name = "Joe Rickerby" },
  { name = "Álvaro Mondéjar Rubio", email = "mondejar1994@gmail.com" }
]
maintainers = [
  { name = "Álvaro Mondéjar Rubio", email = "mondejar1994@gmail.com" }
]
requires-python = ">=3.7,<3.12"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: Apache Software License",
  "Intended Audience :: Developers",
  "Topic :: Documentation",
  "Topic :: Software Development :: Documentation",
  "Topic :: Text Processing",
  "Topic :: Text Processing :: Markup :: Markdown",
  "Environment :: Console",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
keywords = ["markdown", "mkdocs", "includer", "plugin"]

[project.urls]
Source = "https://github.com/mondeja/mkdocs-include-markdown-plugin"
Documentation = "https://github.com/mondeja/mkdocs-include-markdown-plugin#documentation"
"Bug tracker" = "https://github.com/mondeja/mkdocs-include-markdown-plugin/issues"
Changelog = "https://github.com/mondeja/mkdocs-include-markdown-plugin/releases"

[project.entry-points."mkdocs.plugins"]
include-markdown = "mkdocs_include_markdown_plugin.plugin:IncludeMarkdownPlugin"

[tool.hatch.build]
include = ["/src"]

[tool.hatch.build.targets.wheel]
packages = ["src/mkdocs_include_markdown_plugin"]

[tool.hatch.envs.default]
python = "3.10"
dependencies = ["mondeja-bump"]

[tool.hatch.envs.style]
python = "3.10"
detached = true
dependencies = ["pre-commit"]

[tool.hatch.envs.style.scripts]
lint = "pre-commit run -a"

[tool.hatch.envs.tests]
matrix-name-format = "{variable}-{value}"
dependencies = ["pytest~=7.0", "pytest-cov~=3.0"]

[tool.hatch.envs.tests.scripts]
all = "pytest"
unit = "pytest tests/test_unit"
integration = "pytest tests/test_integration --override-ini addopts=-svv"
cov = """hatch run +py=py310 tests:unit &&
hatch run +py=py310 tests:integration &&
python -c 'import webbrowser as w;w.open("http://127.0.0.1:8088")' &&
python -m http.server 8088 -b localhost -d htmlcov
"""

[[tool.hatch.envs.tests.matrix]]
python = ["py37", "py38", "py39", "py310", "py311"]
mkdocs = ["1.2.4", "1.3.1", "1.4.0"]

[tool.hatch.envs.tests.overrides]
matrix.mkdocs.dependencies = [
  { value = "mkdocs==1.2.4", if = ["1.2.4"] },
  { value = "mkdocs==1.3.1", if = ["1.3.1"] },
  { value = "mkdocs==1.4.0", if = ["1.4.0"] },
]

[tool.bump]
targets = [{ file = "pyproject.toml" }]

[tool.project-config]
cache = "2 days"
style = [
  "gh://mondeja/project-config-styles@v2.1/python/base.json5",
  "gh://mondeja/project-config-styles@v2.1/python/single-quotes.json5",
  "gh://mondeja/project-config-styles@v2.1/python/line-length-80.json5",
  "gh://mondeja/project-config-styles@v2.1/python/tests.json5",
  "gh://mondeja/project-config-styles@v2.1/python/google-docstrings.json5",
  "gh://mondeja/project-config-styles@v2.1/base/pre-commit/md2po2md.json5"
]

[tool.coverage.run]
omit = ["src/mkdocs_include_markdown_plugin/plugin.py"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__\\(",
  "raise NotImplementedError",
  "@(abc\\.)?abstractmethod",
]

[tool.flakeheaven]
inline-quotes = "single"
max-line-length = 80
pytest-fixture-no-parentheses = true
pytest-parametrize-values-type = "tuple"
docstring-convention = "google"
unused-arguments-ignore-abstract-functions = true

[tool.flakeheaven.plugins]
pycodestyle = ["+*", "-W503"]
pyflakes = ["+*"]
pylint = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*"]
flake8-docstrings = ["+*", "-D107", "-D105"]
flake8-executable = ["+*"]
flake8-implicit-str-concat = ["+*"]
flake8-print = ["+*"]
flake8-printf-formatting = ["+*"]
flake8-pytest-style = ["+*"]
flake8-bugbear = ["+*"]
flake8-encodings = ["+*"]
flake8-no-pep420 = ["+*"]
flake8-absolute-import = ["+*"]
flake8-unused-arguments = ["+*"]
flake8-slots = ["+*"]
dlint = ["+*"]

[tool.flakeheaven.exceptions."tests/**"]
flake8-docstrings = [
  "-D100",
  "-D101",
  "-D102",
  "-D103",
  "-D104",
  "-D107",
  "-D205",
  "-D415"
]
flake8-no-pep420 = ["-INP001"]

[tool.flakeheaven.exceptions."setup.py"]
flake8-docstrings = ["-D205"]
flake8-no-pep420 = ["-INP001"]

[tool.flakeheaven.exceptions."src/mkdocs_include_markdown_plugin/plugin.py"]
flake8-docstrings = ["-D100", "-D101", "-D102"]
flake8-unused-arguments = ["-U100"]

[tool.isort]
lines_after_imports = 2
multi_line_output = 3
line_length = 79
use_parentheses = true
combine_as_imports = true
include_trailing_comma = true
remove_redundant_aliases = true
known_tests = "tests"
sections = [
  "FUTURE",
  "STDLIB",
  "THIRDPARTY",
  "FIRSTPARTY",
  "TESTS",
  "LOCALFOLDER"
]
py_version = 37
extra_standard_library = [
  "contextvars",
  "dataclasses",
  "importlib.resources",
  "importlib.metadata",
  "zoneinfo",
  "graphlib",
  "tomllib",
  "wsgiref.types"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
